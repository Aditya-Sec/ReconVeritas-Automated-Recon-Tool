#!/usr/bin/env python3

import os
import argparse
import datetime

# Create results directory
def create_output_dir(target):
    timestamp = datetime.datetime.now().strftime("%Y%m%d-%H%M%S")
    folder_name = f"results/{target}_{timestamp}"
    os.makedirs(folder_name, exist_ok=True)
    return folder_name

# Run command and save output to file
def run_and_save(command, output_file):
    print(f"[+] Running: {command}")
    os.system(f"{command} > {output_file}")
    print(f"[+] Saved: {output_file}")

# Main logic
def main():
    parser = argparse.ArgumentParser(description="ReconVeritas - Recon Automation Suite")
    parser.add_argument("-t", "--target", required=True, help="Target domain or IP")
    args = parser.parse_args()
    target = args.target

    out_dir = create_output_dir(target)

    # Tool commands
    tools = {
        "nmap": f"nmap -sC -sV -Pn -oN {out_dir}/nmap.txt {target}",
        "whatweb": f"whatweb {target} > {out_dir}/whatweb.txt",
        "wafw00f": f"wafw00f {target} > {out_dir}/wafw00f.txt",
        "dnsrecon": f"dnsrecon -d {target} > {out_dir}/dnsrecon.txt",
        "sslscan": f"sslscan {target} > {out_dir}/sslscan.txt",
        "nuclei": f"nuclei -u {target} -o {out_dir}/nuclei.txt",
        "sublist3r": f"python3 Sublist3r/sublist3r.py -d {target} -o {out_dir}/sublist3r.txt",
        "dirsearch": f"python3 dirsearch/dirsearch.py -u http://{target} -o {out_dir}/dirsearch.txt"
    }

    print(f"\n📁 Saving all results in: {out_dir}\n")

    for name, cmd in tools.items():
        print(f"🔧 Running {name.upper()}...")
        os.system(cmd)

    print("\n✅ Recon completed. Check your /results directory.\n")

if __name__ == "__main__":
    main()
